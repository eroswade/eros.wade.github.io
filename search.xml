<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[matlab to Python 官网未说的部分(持续更新)]]></title>
      <url>http://eroswade.github.io/2017/03/27/matlabtopy/</url>
      <content type="html"><![CDATA[<ol>
<li>dot<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">np.sum(A.conj()*B), axis=0)</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="附-官网的部分"><a href="#附-官网的部分" class="headerlink" title="附: 官网的部分"></a>附: 官网的部分</h2><p><a href="https://docs.scipy.org/doc/numpy/user/numpy-for-matlab-users.html" target="_blank" rel="external">NUMPY FOR MATLAB USER</a></p>
<table>
<thead>
<tr>
<th>MATLAB</th>
<th>numpy</th>
<th>Notes</th>
</tr>
</thead>
<tbody>
<tr>
<td>help func</td>
<td>info(func) or help(func) or func? (in Ipython)</td>
<td>get help on the function func</td>
</tr>
<tr>
<td>which func</td>
<td>see note HELP</td>
<td>find out where func is defined</td>
</tr>
<tr>
<td>type func</td>
<td>source(func) or func?? (in Ipython)</td>
<td>print source for func (if not a native function)</td>
</tr>
<tr>
<td>a &amp;&amp; b</td>
<td>a and b</td>
<td>short-circuiting logical AND operator (Python native operator); scalar arguments only</td>
</tr>
<tr>
<td>a &#124;&#124; b</td>
<td>a or b</td>
<td>short-circuiting logical OR operator (Python native operator); scalar arguments only</td>
</tr>
<tr>
<td>1<em>i, 1</em>j, 1i, 1j</td>
<td>1j</td>
<td>complex numbers</td>
</tr>
<tr>
<td>eps</td>
<td>np.spacing(1)</td>
<td>Distance between 1 and the nearest floating point number.</td>
</tr>
<tr>
<td>ode45</td>
<td>scipy.integrate.ode(f).set_integrator(‘dopri5’)</td>
<td>integrate an ODE with Runge-Kutta 4,5</td>
</tr>
<tr>
<td>ode15s</td>
<td>scipy.integrate.ode(f).set_integrator(‘vode’, method=’bdf’, order=5)</td>
<td>integrate an ODE with BDF method</td>
</tr>
<tr>
<td>ndims(a)</td>
<td>ndim(a) or a.ndim</td>
<td>get the number of dimensions of an array</td>
</tr>
<tr>
<td>numel(a)</td>
<td>size(a) or a.size</td>
<td>get the number of elements of an array</td>
</tr>
<tr>
<td>size(a)</td>
<td>shape(a) or a.shape</td>
<td>get the “size” of the matrix</td>
</tr>
<tr>
<td>size(a,n)</td>
<td>a.shape[n-1]</td>
<td>get the number of elements of the n-th dimension of array a. (Note that MATLAB® uses 1 based indexing while Python uses 0 based indexing, See note INDEXING)</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 软件开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> matlab </tag>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[NRF51822操作MX25L4005]]></title>
      <url>http://eroswade.github.io/2017/03/24/NRF-MX25L/</url>
      <content type="html"><![CDATA[<h1 id="nrf51822操作MX25L4005"><a href="#nrf51822操作MX25L4005" class="headerlink" title="nrf51822操作MX25L4005"></a>nrf51822操作MX25L4005</h1><h3 id="指令集："><a href="#指令集：" class="headerlink" title="指令集："></a>指令集：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Read_CMD			0x03</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Sector_Erase		0x20</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Block_Erase		0xD8</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Chip_Erase		0x60</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Page_Program		0x02</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Read_Status		0x05</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Write_Status		0x01</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Write_Enable		0x06</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Write_Disable		0x04</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Read_ID			0x9F</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Read				0x03</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Fast_Read			0x0B</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Power_Down		0xB9</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Release_DP		0xAB</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Enter_4K			0xA5</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Exit_4K			0xB5</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Read_ES			0xAB</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Read_EMS			0x90</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_Flash_Parallel_Mode		0x55</span></div></pre></td></tr></table></figure>
<h3 id="内存结构："><a href="#内存结构：" class="headerlink" title="内存结构："></a>内存结构：</h3><p><img src="/2017/03/24/NRF-MX25L/mem_struct.png" alt="DATASTRUCT"></p>
<a id="more"></a>
<h3 id="CODE"><a href="#CODE" class="headerlink" title="CODE:"></a>CODE:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div></pre></td><td class="code"><pre><div class="line">#include &quot;M25L.h&quot;</div><div class="line">#include &lt;nrf51.h&gt;</div><div class="line">#include &quot;../Broad_Pin_config.h&quot;</div><div class="line">#include &quot;spi_master_config.h&quot;</div><div class="line">#include &quot;nrf_gpio.h&quot;</div><div class="line"></div><div class="line"></div><div class="line">#define FLASH_ENABLE nrf_gpio_pin_clear(SPI_PSELSS1)</div><div class="line">#define FLASH_DISABLE nrf_gpio_pin_set(SPI_PSELSS1)</div><div class="line">#define SPI_BUFSIZE 8</div><div class="line">uint8_t   M25MasterBuffer[SPI_BUFSIZE];</div><div class="line">uint8_t   M25SlaveBuffer[SPI_BUFSIZE];</div><div class="line">uint8_t  M25ReadLength, M25WriteLength;</div><div class="line"></div><div class="line">#define SET			0x01</div><div class="line">#define	RESET		0x00</div><div class="line"></div><div class="line">uint8_t Flash_Init(void)</div><div class="line">&#123;</div><div class="line">	uint32_t *spi_base_address = spi_master_init(SPI1, SPI_MODE0, false);</div><div class="line">	if (spi_base_address == 0) &#123;</div><div class="line">		return false;</div><div class="line">	&#125;</div><div class="line">	return true;</div><div class="line">&#125;</div><div class="line"></div><div class="line">u8 SPI1_WriteRead_Data(u8 dat)</div><div class="line">&#123;</div><div class="line">	uint32_t counter = 0;</div><div class="line"></div><div class="line">	NRF_SPI_Type *spi_base = (NRF_SPI_Type *)NRF_SPI1;</div><div class="line"></div><div class="line"></div><div class="line">	spi_base-&gt;TXD = (uint32_t)(dat);</div><div class="line"></div><div class="line">	while ((spi_base-&gt;EVENTS_READY == 0U) &amp;&amp; (counter &lt; TIMEOUT_COUNTER))</div><div class="line">	&#123;</div><div class="line">		counter++;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	if (counter == TIMEOUT_COUNTER) </div><div class="line">	&#123;</div><div class="line">		FLASH_DISABLE;</div><div class="line">		return false;</div><div class="line">	&#125;</div><div class="line">	else &#123;   /* clear the event to be ready to receive next messages */</div><div class="line">		spi_base-&gt;EVENTS_READY = 0U;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	return (uint8_t)spi_base-&gt;RXD;							</div><div class="line">&#125;</div><div class="line"></div><div class="line">FLASH_ID Flash_Read_ID(void)</div><div class="line">&#123;</div><div class="line">	FLASH_ID  Flash_id;</div><div class="line"></div><div class="line">	FLASH_ENABLE;</div><div class="line">	SPI1_WriteRead_Data(SPI_Flash_Read_ID);</div><div class="line">	Flash_id.MXIC_ID = SPI1_WriteRead_Data(DummyData);</div><div class="line">	Flash_id.MemType_ID = SPI1_WriteRead_Data(DummyData);</div><div class="line">	Flash_id.MemDensity_ID = SPI1_WriteRead_Data(DummyData);</div><div class="line">	FLASH_DISABLE;</div><div class="line"></div><div class="line">	return 	Flash_id;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">void Flash_Write_Enable(void)</div><div class="line">&#123;</div><div class="line">	FLASH_ENABLE;</div><div class="line">	SPI1_WriteRead_Data(SPI_Flash_Write_Enable);</div><div class="line">	FLASH_DISABLE;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void Flash_Write_Disable(void)</div><div class="line">&#123;</div><div class="line">	FLASH_ENABLE;</div><div class="line">	SPI1_WriteRead_Data(SPI_Flash_Write_Disable);</div><div class="line">	FLASH_DISABLE;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">u8 Flash_Read_Status_Register(void)</div><div class="line">&#123;</div><div class="line">	u8 data;</div><div class="line"></div><div class="line">	FLASH_ENABLE;</div><div class="line">	SPI1_WriteRead_Data(SPI_Flash_Read_Status);</div><div class="line">	data = SPI1_WriteRead_Data(DummyData);</div><div class="line">	FLASH_DISABLE;</div><div class="line"></div><div class="line">	return data;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void Flash_Write_Status_Register(u8 dat)</div><div class="line">&#123;</div><div class="line">	FLASH_ENABLE;</div><div class="line">	SPI1_WriteRead_Data(SPI_Flash_Write_Status);</div><div class="line">	SPI1_WriteRead_Data(dat);</div><div class="line">	FLASH_DISABLE;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void Flash_Sector_Erase(u16 Sector_idx)</div><div class="line">&#123;</div><div class="line">	u8 Sector_Addr_H;</div><div class="line">	u8 Sector_Addr_M;</div><div class="line">	u8 Sector_Addr_L;</div><div class="line"></div><div class="line">	Sector_Addr_H = (u8)(((Sector_idx * 0x1000) &amp; 0x00ff0000) &gt;&gt; 16);</div><div class="line">	Sector_Addr_M = (u8)(((Sector_idx * 0x1000) &amp; 0x0000ff00) &gt;&gt; 8);</div><div class="line">	Sector_Addr_L = 0x00;</div><div class="line"></div><div class="line">	Flash_Write_Enable();</div><div class="line">	FLASH_ENABLE;</div><div class="line">	SPI1_WriteRead_Data(SPI_Flash_Sector_Erase);</div><div class="line">	SPI1_WriteRead_Data(Sector_Addr_H);</div><div class="line">	SPI1_WriteRead_Data(Sector_Addr_M);</div><div class="line">	SPI1_WriteRead_Data(Sector_Addr_L);</div><div class="line">	FLASH_DISABLE;</div><div class="line"></div><div class="line">	while (Flash_Read_Status_Register()&amp;C_Flash_Busy != RESET);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void Flash_Block_Erase(u16 Block_idx)</div><div class="line">&#123;</div><div class="line">	u8 Block_Addr_H;</div><div class="line">	u8 Block_Addr_M;</div><div class="line">	u8 Block_Addr_L;</div><div class="line"></div><div class="line">	Block_Addr_H = (u8)(((Block_idx * 0x10000) &amp; 0x00ff0000) &gt;&gt; 16);</div><div class="line">	Block_Addr_M = 0x00;</div><div class="line">	Block_Addr_L = 0x00;</div><div class="line"></div><div class="line">	Flash_Write_Enable();</div><div class="line">	FLASH_ENABLE;</div><div class="line">	SPI1_WriteRead_Data(SPI_Flash_Block_Erase);</div><div class="line">	SPI1_WriteRead_Data(Block_Addr_H);</div><div class="line">	SPI1_WriteRead_Data(Block_Addr_M);</div><div class="line">	SPI1_WriteRead_Data(Block_Addr_L);</div><div class="line">	FLASH_DISABLE;</div><div class="line"></div><div class="line">	while (Flash_Read_Status_Register()&amp;C_Flash_Busy != RESET);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void Flash_Chip_Erase(void)</div><div class="line">&#123;</div><div class="line">	Flash_Write_Enable();</div><div class="line">	FLASH_ENABLE;</div><div class="line">	SPI1_WriteRead_Data(SPI_Flash_Chip_Erase);</div><div class="line">	FLASH_DISABLE;</div><div class="line">	while (Flash_Read_Status_Register()&amp;C_Flash_Busy != RESET);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void Flash_WriteByte(uint32_t data_addr, u8 data)</div><div class="line">&#123;</div><div class="line">	u8 Data_Addr_H;</div><div class="line">	u8 Data_Addr_M;</div><div class="line">	u8 Data_Addr_L;</div><div class="line"></div><div class="line">	Data_Addr_H = (u8)(((data_addr * 0x10000) &amp; 0x00ff0000) &gt;&gt; 16);</div><div class="line">	Data_Addr_M = (u8)(((data_addr * 0x10000) &amp; 0x0000ff00) &gt;&gt; 8);</div><div class="line">	Data_Addr_L = (u8)((data_addr * 0x10000) &amp; 0x000000ff);</div><div class="line"></div><div class="line">	Flash_Write_Enable();</div><div class="line">	FLASH_ENABLE;</div><div class="line">	SPI1_WriteRead_Data(SPI_Flash_Page_Program);</div><div class="line">	SPI1_WriteRead_Data(Data_Addr_H);</div><div class="line">	SPI1_WriteRead_Data(Data_Addr_M);</div><div class="line">	SPI1_WriteRead_Data(Data_Addr_L);</div><div class="line">	SPI1_WriteRead_Data(data);</div><div class="line">	FLASH_DISABLE;</div><div class="line"></div><div class="line">	while (Flash_Read_Status_Register()&amp;C_Flash_Busy != RESET);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void Flash_WriteBytes(uint32_t data_addr, u8* ptdata, u16 count)</div><div class="line">&#123;</div><div class="line">	u8 Data_Addr_H;</div><div class="line">	u8 Data_Addr_M;</div><div class="line">	u8 Data_Addr_L;</div><div class="line"></div><div class="line">	Data_Addr_H = (u8)(((data_addr * 0x10000) &amp; 0x00ff0000) &gt;&gt; 16);</div><div class="line">	Data_Addr_M = (u8)(((data_addr * 0x10000) &amp; 0x0000ff00) &gt;&gt; 8);</div><div class="line">	Data_Addr_L = (u8)((data_addr * 0x10000) &amp; 0x000000ff);</div><div class="line"></div><div class="line">	Flash_Write_Enable();</div><div class="line">	FLASH_ENABLE;</div><div class="line">	SPI1_WriteRead_Data(SPI_Flash_Page_Program);</div><div class="line">	SPI1_WriteRead_Data(Data_Addr_H);</div><div class="line">	SPI1_WriteRead_Data(Data_Addr_M);</div><div class="line">	SPI1_WriteRead_Data(Data_Addr_L);</div><div class="line"></div><div class="line">	for (; count != 0; count--)</div><div class="line">	&#123;</div><div class="line">		SPI1_WriteRead_Data(*(ptdata++));</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	FLASH_DISABLE;</div><div class="line"></div><div class="line">	while (Flash_Read_Status_Register()&amp;C_Flash_Busy != RESET);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void Flash_ReadBytes(uint32_t data_addr, u8* ptdata, u16 count)</div><div class="line">&#123;</div><div class="line">	u8 Data_Addr_H;</div><div class="line">	u8 Data_Addr_M;</div><div class="line">	u8 Data_Addr_L;</div><div class="line"></div><div class="line">	Data_Addr_H = (u8)(((data_addr * 0x10000) &amp; 0x00ff0000) &gt;&gt; 16);</div><div class="line">	Data_Addr_M = (u8)(((data_addr * 0x10000) &amp; 0x0000ff00) &gt;&gt; 8);</div><div class="line">	Data_Addr_L = (u8)((data_addr * 0x10000) &amp; 0x000000ff);</div><div class="line"></div><div class="line">	FLASH_ENABLE;</div><div class="line">	SPI1_WriteRead_Data(SPI_Flash_Fast_Read);</div><div class="line">	SPI1_WriteRead_Data(Data_Addr_H);</div><div class="line">	SPI1_WriteRead_Data(Data_Addr_M);</div><div class="line">	SPI1_WriteRead_Data(Data_Addr_L);</div><div class="line">	SPI1_WriteRead_Data(DummyData);</div><div class="line"></div><div class="line">	for (; count != 0; count--)</div><div class="line">	&#123;</div><div class="line">		*(ptdata++) = SPI1_WriteRead_Data(DummyData);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	FLASH_DISABLE;</div><div class="line">&#125;</div><div class="line"></div><div class="line">u8 Flash_ReadByte(uint32_t data_addr)</div><div class="line">&#123;</div><div class="line">	u8 data;</div><div class="line">	u8 Data_Addr_H;</div><div class="line">	u8 Data_Addr_M;</div><div class="line">	u8 Data_Addr_L;</div><div class="line"></div><div class="line">	Data_Addr_H = (u8)(((data_addr * 0x10000) &amp; 0x00ff0000) &gt;&gt; 16);</div><div class="line">	Data_Addr_M = (u8)(((data_addr * 0x10000) &amp; 0x0000ff00) &gt;&gt; 8);</div><div class="line">	Data_Addr_L = (u8)((data_addr * 0x10000) &amp; 0x000000ff);</div><div class="line"></div><div class="line">	FLASH_ENABLE;</div><div class="line">	SPI1_WriteRead_Data(SPI_Flash_Read);</div><div class="line">	SPI1_WriteRead_Data(Data_Addr_H);</div><div class="line">	SPI1_WriteRead_Data(Data_Addr_M);</div><div class="line">	SPI1_WriteRead_Data(Data_Addr_L);</div><div class="line">	data = SPI1_WriteRead_Data(DummyData);</div><div class="line">	FLASH_DISABLE;</div><div class="line"></div><div class="line">	return data;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="使用注意事项："><a href="#使用注意事项：" class="headerlink" title="使用注意事项："></a>使用注意事项：</h3><p>首先，写数据之前必须要<strong>擦除</strong>，因为所有的flash只能从1变为0，擦除将flash全部置1，写的时候相应位置0。<br>在对flash进行写操作时，要理解一点：对flash写数据(也就是Page Program(PP)，Command 02)是基于页(256bytes)为单位的，如果数据写到页的末尾，会从当前页的首地址继续开始写剩余的数据，这样就有可能造成成数据的丢失。<br>也就是说：</p>
<ul>
<li>如果从0开始写， 数据量大于256，写完256个数据之后， 会从<strong>当前页</strong>的0位开始写后面的数据。</li>
<li>如果不是从0开始写，数量量超当前页的时候， 也会从<strong>当前页</strong>的0位开始覆盖数据。</li>
</ul>
<h3 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h3><p><a href="http://blog.csdn.net/heshanxingzhe/article/details/6170087" target="_blank" rel="external">heshanxingzhe</a><br><a href="http://wenku.baidu.com/link?url=r44oXZ4HFg-nkf4GSwskH4Vf9uFw99e6XoFM4aLr6yF4YrcxkaxmvSyKJ2cTpvsywnbWX3QKow1sPrRnLS3QYT66EHiYcPu9zFq4ZVLtzYq" target="_blank" rel="external">jayjiang86</a></p>
]]></content>
      
        <categories>
            
            <category> 硬件开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> NRF51822 </tag>
            
            <tag> 蓝牙 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[NRF51822 SPI]]></title>
      <url>http://eroswade.github.io/2017/03/23/NRF51822-SPI/</url>
      <content type="html"><![CDATA[<p>调试NRF51822 SPI 和LIS3DH通讯， 碰到一个很奇葩的问题，做一下记录。以免自己忘记。 测试了10多个小时。 </p>
<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>NRF51822 和 LIS3DH通讯， 并把数据通过ble_uart协议发送到手机上。 之前已经做过一次。 代码基本现成。 但就是在读取不到数据。<br>找了很久代码的原因。依然没有找到。 后来突然想起来。工程文件好像之前清理过。 因为之前的项目用不到SPI， 把SPI相关的信息清了。<br><img src="/2017/03/23/NRF51822-SPI/SPI_NRF51.png" alt="SPI_NRF51"></p>
<a id="more"></a>
<h2 id="SPI-MASTER-0-ENABLE"><a href="#SPI-MASTER-0-ENABLE" class="headerlink" title="SPI_MASTER_0_ENABLE"></a>SPI_MASTER_0_ENABLE</h2><p>主要问题是在 components\drivers_nrf\spi_master\spi_master.c<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> SPI_MASTER_0_ENABLE</span></div><div class="line"><span class="comment">/**</span></div><div class="line"> * @brief SPI0 interrupt handler.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPI0_TWI0_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> ((NRF_SPI0-&gt;EVENTS_READY == <span class="number">1</span>) &amp;&amp; (NRF_SPI0-&gt;INTENSET &amp; SPI_INTENSET_READY_Msk))</div><div class="line">    &#123;</div><div class="line">        NRF_SPI0-&gt;EVENTS_READY = <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="keyword">volatile</span> <span class="keyword">spi_master_instance_t</span> * p_spi_instance = spi_master_get_instance(SPI_MASTER_0);</div><div class="line"></div><div class="line">        spi_master_send_recv_irq(p_spi_instance);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//SPI_MASTER_0_ENABLE</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> SPI_MASTER_1_ENABLE</span></div><div class="line"><span class="comment">/**</span></div><div class="line"> * @brief SPI0 interrupt handler.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPI1_TWI1_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> ((NRF_SPI1-&gt;EVENTS_READY == <span class="number">1</span>) &amp;&amp; (NRF_SPI1-&gt;INTENSET &amp; SPI_INTENSET_READY_Msk))</div><div class="line">    &#123;</div><div class="line">        NRF_SPI1-&gt;EVENTS_READY = <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="keyword">volatile</span> <span class="keyword">spi_master_instance_t</span> * p_spi_instance = spi_master_get_instance(SPI_MASTER_1);</div><div class="line"></div><div class="line">        spi_master_send_recv_irq(p_spi_instance);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//SPI_MASTER_1_ENABLE</span></span></div></pre></td></tr></table></figure></p>
<h2 id="DEBUG-NRF-USER"><a href="#DEBUG-NRF-USER" class="headerlink" title="DEBUG_NRF_USER"></a>DEBUG_NRF_USER</h2><p>可能这个非必须， 只是因为我调用到了这个函数。<br>components\libraries\util\nrf_assert.h<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#if defined(DEBUG_NRF) || defined(DEBUG_NRF_USER)</div><div class="line"></div><div class="line">void assert_nrf_callback(uint16_t line_num, const uint8_t *file_name);</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 硬件开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> NRF51822 </tag>
            
            <tag> 蓝牙 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Computer Investing W4]]></title>
      <url>http://eroswade.github.io/2017/03/22/Computer-Investing-W4/</url>
      <content type="html"><![CDATA[<h1 id="看Cousera的Computer-Investing-的随笔"><a href="#看Cousera的Computer-Investing-的随笔" class="headerlink" title="看Cousera的Computer Investing 的随笔"></a>看Cousera的Computer Investing 的随笔</h1><h2 id="where-does-info-come-from"><a href="#where-does-info-come-from" class="headerlink" title="where does info come from"></a>where does info come from</h2><p>price/volume: from the markets  价格/成交量:从市场来 true value<br>fundamentals: sec filings  基本面:财务报表<br>news: exogenous sources 新闻: 外部生成.</p>
<h2 id="3-versions-of-efficient-markets-hypothesis"><a href="#3-versions-of-efficient-markets-hypothesis" class="headerlink" title="3 versions of efficient markets hypothesis"></a>3 versions of efficient markets hypothesis</h2><p>3种 有效市场假设</p>
<ul>
<li>weak: 新闻不影响以后的价值, 只影响当前和以前的. 技术可分析的</li>
<li>semi-strong 消息会连续的影响价值</li>
<li>strong 1+2 还可能会对没有披露的信息产生响应.</li>
</ul>
<a id="more"></a> 
<p>认知偏差:<br>过度自信<br>过度应激<br>信息偏差</p>
<h2 id="QSTK-处理事件"><a href="#QSTK-处理事件" class="headerlink" title="QSTK 处理事件"></a>QSTK 处理事件</h2><p>1 认为和大盘背离5% 都有事件发生.<br>2 </p>
<h2 id="module-objectives"><a href="#module-objectives" class="headerlink" title="module objectives"></a>module objectives</h2><ul>
<li>understand ‘risk’</li>
<li>understand correlation and covariance 相关,和协方差</li>
<li>understand mean variance optimization 均值方差优化</li>
<li>understand the efficient frontier  有效边界</li>
</ul>
<h2 id="portfolio-optimization-投资策略优化"><a href="#portfolio-optimization-投资策略优化" class="headerlink" title="portfolio optimization  投资策略优化"></a>portfolio optimization  投资策略优化</h2><p>入: </p>
<ul>
<li>一组股票</li>
<li>目标收益</li>
</ul>
<p>找出:<br>分配方式,使最小risk.</p>
<h2 id="input-and-output-of-portfolio-optmizer"><a href="#input-and-output-of-portfolio-optmizer" class="headerlink" title="input and output of portfolio optmizer"></a>input and output of portfolio optmizer</h2><p>input:</p>
<ul>
<li>expected return for each equity</li>
<li>volatility(rist) of each equity</li>
<li>target return</li>
<li>covariance matrix</li>
</ul>
<p>output:</p>
<ul>
<li>portfolio weights that minimize risk for target return</li>
</ul>
<h2 id="The-Efficient-Frontier-边界"><a href="#The-Efficient-Frontier-边界" class="headerlink" title="The Efficient Frontier(边界)"></a>The Efficient Frontier(边界)</h2><p>看evernote</p>
<h2 id="How-Optimizers-Work"><a href="#How-Optimizers-Work" class="headerlink" title="How Optimizers Work"></a>How Optimizers Work</h2><p>qstk t8</p>
<ul>
<li>define variable: equity weights</li>
<li>define constraints: min or max weight</li>
<li>define optimization criteria: function of weights</li>
<li>optimizer algorithm: <ul>
<li>Tweak weights</li>
<li>check constraints</li>
<li>ok?</li>
<li>call function</li>
<li>repeat</li>
</ul>
</li>
</ul>
<p>里面有一个很重点的东西 cvxopt  convex optimization.<br>凸线优化 SIN函数可以找到高峰, 低谷能排除. 重点!!</p>
]]></content>
      
        <categories>
            
            <category> 金融 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 程序化交易 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[matlab call python]]></title>
      <url>http://eroswade.github.io/2017/03/22/matlab-call-python/</url>
      <content type="html"><![CDATA[<h1 id="MATLAB-call-python"><a href="#MATLAB-call-python" class="headerlink" title="MATLAB call python"></a>MATLAB call python</h1><p>Make sure the Python module is on the Python search path. To test if module <code>mymod</code> is on the path, type:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">py.importlib.import_module(&apos;mymod&apos;)</div></pre></td></tr></table></figure></p>
<p>If Python cannot find the module, MATLAB displays a Python error message.</p>
<p>To add mymod, in folder modpath, to the path, type:</p>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">P = py.sys.path;</div><div class="line"><span class="keyword">if</span> count(P,<span class="string">'modpath'</span>) == <span class="number">0</span></div><div class="line">    insert(P,int32(<span class="number">0</span>),<span class="string">'modpath'</span>);</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<a id="more"></a> 
<h2 id="load"><a href="#load" class="headerlink" title="load"></a>load</h2><p><code>py.importlib.import_module(&#39;mymod&#39;)</code></p>
<h2 id="reload"><a href="#reload" class="headerlink" title="reload"></a>reload</h2><p><code>py.reload(mod);</code></p>
<h2 id="get-data"><a href="#get-data" class="headerlink" title="get data"></a>get data</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">d=py.sys.path;</div><div class="line">d=cell(d);</div><div class="line">dat=char(d&#123;<span class="number">1</span>&#125;);</div></pre></td></tr></table></figure>
<h2 id="data-trans"><a href="#data-trans" class="headerlink" title="data trans"></a>data trans</h2><ul>
<li>时间  <code>py.datetime.date(int32(2011),int32(1),int32(1))</code></li>
<li>string   <code>py.str(matlab char)</code></li>
<li>list      <code>py.list(matlab cell)</code></li>
</ul>
<h2 id="matlab-python-std-差别"><a href="#matlab-python-std-差别" class="headerlink" title="matlab python std 差别"></a>matlab python std 差别</h2><p>MATLAB默认用无偏/N-1 PYTHON默认用总体/N</p>
]]></content>
      
        <categories>
            
            <category> 软件开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> matlab </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[首弹]]></title>
      <url>http://eroswade.github.io/2017/03/21/test/</url>
      <content type="html"><![CDATA[<h3 id="今天开始准备写写BLOG"><a href="#今天开始准备写写BLOG" class="headerlink" title="今天开始准备写写BLOG"></a>今天开始准备写写BLOG</h3><p>写了很多年日记，但就是不喜欢在网上写东西。文笔差是一部分，不愿意和陌生人分享也是一部分。</p>
<h3 id="为什么开始写？"><a href="#为什么开始写？" class="headerlink" title="为什么开始写？"></a>为什么开始写？</h3><p>也许只是李笑来的影响。 想写写文字。 一来给自己一个锻炼文笔的地方。 二来也给自己一点压力吧。 还有很重要的一点，结婚，生子之后，确实成长了很多。 有很多东西，挺想和人说说。</p>
<a id="more"></a> 
<h3 id="写什么？"><a href="#写什么？" class="headerlink" title="写什么？"></a>写什么？</h3><p>可能主要还是写工作吧。 然后会写一些随想。这部分大概就是我的分类了。</p>
<ul>
<li>软件开发</li>
<li>硬件开发</li>
<li>经管</li>
<li>数学/AI</li>
<li>自己的项目</li>
<li>计划总结</li>
</ul>
<h3 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h3><p><a href="http://hexo.io/" target="_blank" rel="external">hexo</a><br><a href="http://getbootstrap.com/" target="_blank" rel="external">Bootstrap</a><br><a href="http://github.com/wzpan/hexo-theme-freemind/" target="_blank" rel="external">Freemind</a></p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
