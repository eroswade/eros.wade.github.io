%toc
%title vim_wiki使用
%template def_template
==== 标题和目录 ====

通常在wiki文件的页首定义文章标题和目录，如

`%title 文章标题-VimWiki插件`

`%toc 文章目录`

` %nohtml 告诉 vimwiki 不为某条目生成HTML文件。即使你在该条目打开时为它单独执行 :Vimwiki2HTML ，也不会生成`

    在VimWiki生成HTML页面时，将生成 title（标题）和toc（目录）。 <br>

    标题。通过= 标题 =的形式定义各级标题，如= h1 =、== h2 ==，最多支持6级标题。可以在任意行按键盘的+键，就自动添加标题（如果已存在标题，则降低标题级别），按-键，就自动删除标题（如果已存在标题，则升高标题级别）。
    # 可以改变HEAD的颜色.
    # =号前加空格可以居中

see :h vimwiki-syntax-links

====链接(内链和外链)====

wiki链接。通过

`[[主题]]`

的方式，建立新的wiki页。在`[[主题]]`上键入回车，就会打开对应的wiki文件，如果没有，则自动创建。<br>

外部链接。通过如

`[[http://www.berlinix.com | 波黎克斯]]`

[[http://www.berlinix.com | 波黎克斯]]
的方式，引用外部链接，这种方式的展现效果只显示链接的描述（上例即只显示“波黎克斯”这几个字）。<br>

表格中使用链接的格式为`[[link][descr]]`，而不能用通常的`[[link|descr]]`格式。

see :h vimwiki-syntax-links

====格式化文字段====

有几种常见方法：

# 在一行的开始缩进4个字符（所有文字必须在一行）。生成HTML代码<pre>。 see :h vimwiki-syntax-blockquotes
# 用\{\{\{和\}\}\}把代码段扩起来（可以有多行）。生成HTML代码<pre>。 see :h vimwiki-syntax-preformatted
# 用"`"（数字键1）前面那个键把文字扩起来（所有文字必须在一行）。生成HTML代码<code>。 
# 公式 用`$`符号 see :h vimwiki-syntax-math
# `%%` 表示注释 不在HTML里出现

{{{class="brush: python" >
 def hello(world):
     for x in range(10):
         print("Hello {0} number {1}".format(world, x))
}}}


====修饰文字显示效果====

有几种常用方法：

# 用*将文字扩起来（"*"和前后的文字间要有空格），以加粗方式显示，如`*`加粗`*`的效果为： *加粗*
# 用`^`实现文字上标，如x`^`2`^`的效果为：x^2^
# 用`,,`实现文字下标，如A`,,`1`,,`的效果为：A,,1,,

see :h vimwiki-syntax
==== LIST ====
see :h vimwiki-synax-lists
====表格====

定义表格的语法如：

`| HEAD1 | HEAD2   |`<br>
`| ------+-------- |`<br>
`| Vim   | Editor  |`<br>
`| GCC   |Compiler |`<br>

see :h vimwiki-syntax-tables


